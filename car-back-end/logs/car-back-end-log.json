{"@timestamp":"2020-10-05T08:53:13.944Z", "log.level": "INFO", "message":"Starting CardatabaseApplication on synapticiel with PID 2300 (C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend\\target\\classes started by developer in C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T08:53:13.948Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T08:53:14.010Z", "log.level": "INFO", "message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor"}
{"@timestamp":"2020-10-05T08:53:14.010Z", "log.level": "INFO", "message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor"}
{"@timestamp":"2020-10-05T08:53:15.353Z", "log.level": "INFO", "message":"Bootstrapping Spring Data repositories in DEFAULT mode.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T08:53:15.447Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 82ms. Found 2 repository interfaces.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T08:53:16.060Z", "log.level": "INFO", "message":"Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5fd3d8f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T08:53:16.091Z", "log.level": "INFO", "message":"Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$df542629] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T08:53:16.827Z", "log.level": "INFO", "message":"Tomcat initialized with port(s): 8080 (http)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T08:53:16.852Z", "log.level": "INFO", "message":"Initializing ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T08:53:16.873Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2020-10-05T08:53:16.873Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/9.0.14]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2020-10-05T08:53:16.911Z", "log.level": "INFO", "message":"The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\\es\\elasticsearch\\jdk\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:/es/elasticsearch/jdk/bin/client;C:/es/elasticsearch/jdk/bin;C:\\python38\\Scripts\\;C:\\python38\\;C:\\Program Files\\Java\\jdk1.8.0_251\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\Program Files\\Lenovo\\Fingerprint Manager Pro\\;C:\\Program Files (x86)\\Intel\\UCRT\\;C:\\Program Files\\Intel\\UCRT\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Git\\cmd;C:\\work\\installed\\open_ssl\\bin;C:\\work\\installed\\TortoiseGit\\bin;C:\\Program Files\\PuTTY\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\es\\logstash\\bin;C:\\curl\\bin;C:\\Go\\bin;C:\\Program Files (x86)\\Yarn\\bin\\;C:\\Program Files\\nodejs\\;C:\\Users\\developer\\.windows-build-tools\\python27\\;c:\\work\\installed\\android_sdk\\platform-tools;C:\\Users\\developer\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\developer\\.windows-build-tools\\python27\\Scripts;C:\\grails-2.5.0\\bin;C:\\es\\labs\\docker;C:\\es\\labs\\docker;C:\\Program Files\\Tesseract-OCR;C:\\Go\\bin;C:\\Wireshark;C:\\Users\\developer\\AppData\\Local\\Yarn\\bin;C:\\Users\\developer\\AppData\\Roaming\\npm;C:\\Windows\\system32;;.]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.AprLifecycleListener"}
{"@timestamp":"2020-10-05T08:53:17.112Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T08:53:17.112Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 3102 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.web.context.ContextLoader"}
{"@timestamp":"2020-10-05T08:53:17.575Z", "log.level": "INFO", "message":"HikariPool-1 - Starting...", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T08:53:17.813Z", "log.level": "INFO", "message":"HikariPool-1 - Start completed.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T08:53:17.982Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2020-10-05T08:53:18.253Z", "log.level": "INFO", "message":"HHH000412: Hibernate Core {5.3.7.Final}", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.Version"}
{"@timestamp":"2020-10-05T08:53:18.256Z", "log.level": "INFO", "message":"HHH000206: hibernate.properties not found", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.cfg.Environment"}
{"@timestamp":"2020-10-05T08:53:18.605Z", "log.level": "INFO", "message":"HCANN000001: Hibernate Commons Annotations {5.0.4.Final}", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.annotations.common.Version"}
{"@timestamp":"2020-10-05T08:53:18.934Z", "log.level": "INFO", "message":"HHH000400: Using dialect: org.hibernate.dialect.H2Dialect", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.dialect.Dialect"}
{"@timestamp":"2020-10-05T08:53:20.431Z", "log.level": "INFO", "message":"HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@d710cc6'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.tool.schema.internal.SchemaCreatorImpl"}
{"@timestamp":"2020-10-05T08:53:20.438Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2020-10-05T08:53:20.486Z", "log.level": "INFO", "message":"LiveReload server is running on port 35729", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"}
{"@timestamp":"2020-10-05T08:53:22.584Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-10-05T08:53:22.811Z", "log.level": "WARN", "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration"}
{"@timestamp":"2020-10-05T08:53:23.802Z", "log.level": "INFO", "message":"Starting ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T08:53:24.205Z", "log.level": "INFO", "message":"Tomcat started on port(s): 8080 (http) with context path ''", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T08:53:24.209Z", "log.level": "INFO", "message":"Started CardatabaseApplication in 10.934 seconds (JVM running for 13.635)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T08:53:24.515Z", "log.level": "INFO", "message":"Hello Spring Boot", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T08:53:43.590Z", "log.level": "INFO", "message":"Initializing Spring DispatcherServlet 'dispatcherServlet'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T08:53:43.591Z", "log.level": "INFO", "message":"Initializing Servlet 'dispatcherServlet'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.springframework.web.servlet.DispatcherServlet"}
{"@timestamp":"2020-10-05T08:53:43.633Z", "log.level": "INFO", "message":"Completed initialization in 42 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.springframework.web.servlet.DispatcherServlet"}
{"@timestamp":"2020-10-05T08:53:43.902Z", "log.level": "INFO", "message":"HHH000397: Using ASTQueryTranslatorFactory", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.hql.internal.QueryTranslatorFactoryInitiator","transaction.id":"c3c372e76c8313b3","trace.id":"0e3ed869c5f18bca01674d7642f71503"}
{"@timestamp":"2020-10-05T08:53:51.901Z", "log.level": "WARN", "message":"Resolved [org.springframework.data.rest.webmvc.ResourceNotFoundException: Resource not found!]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","transaction.id":"82938c011967db6f","trace.id":"b94f4573a9654bcb33667ea4a42823d1"}
{"@timestamp":"2020-10-05T09:03:02.662Z", "log.level": "INFO", "message":"Starting CardatabaseApplication on synapticiel with PID 3704 (C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend\\target\\classes started by developer in C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:03:02.664Z", "log.level":"DEBUG", "message":"Running with Spring Boot v2.1.2.RELEASE, Spring v5.1.4.RELEASE", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:03:02.665Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:03:02.725Z", "log.level": "INFO", "message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor"}
{"@timestamp":"2020-10-05T09:03:02.725Z", "log.level": "INFO", "message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor"}
{"@timestamp":"2020-10-05T09:03:03.897Z", "log.level": "INFO", "message":"Bootstrapping Spring Data repositories in DEFAULT mode.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:03:03.991Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 81ms. Found 2 repository interfaces.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:03:04.602Z", "log.level": "INFO", "message":"Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aa1d7d89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:03:04.632Z", "log.level": "INFO", "message":"Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$299dcabb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:03:05.273Z", "log.level": "INFO", "message":"Tomcat initialized with port(s): 8080 (http)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:03:05.295Z", "log.level": "INFO", "message":"Initializing ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:03:05.306Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2020-10-05T09:03:05.306Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/9.0.14]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2020-10-05T09:03:05.341Z", "log.level": "INFO", "message":"The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\\es\\elasticsearch\\jdk\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:/es/elasticsearch/jdk/bin/client;C:/es/elasticsearch/jdk/bin;C:\\python38\\Scripts\\;C:\\python38\\;C:\\Program Files\\Java\\jdk1.8.0_251\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\Program Files\\Lenovo\\Fingerprint Manager Pro\\;C:\\Program Files (x86)\\Intel\\UCRT\\;C:\\Program Files\\Intel\\UCRT\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Git\\cmd;C:\\work\\installed\\open_ssl\\bin;C:\\work\\installed\\TortoiseGit\\bin;C:\\Program Files\\PuTTY\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\es\\logstash\\bin;C:\\curl\\bin;C:\\Go\\bin;C:\\Program Files (x86)\\Yarn\\bin\\;C:\\Program Files\\nodejs\\;C:\\Users\\developer\\.windows-build-tools\\python27\\;c:\\work\\installed\\android_sdk\\platform-tools;C:\\Users\\developer\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\developer\\.windows-build-tools\\python27\\Scripts;C:\\grails-2.5.0\\bin;C:\\es\\labs\\docker;C:\\es\\labs\\docker;C:\\Program Files\\Tesseract-OCR;C:\\Go\\bin;C:\\Wireshark;C:\\Users\\developer\\AppData\\Local\\Yarn\\bin;C:\\Users\\developer\\AppData\\Roaming\\npm;C:\\Windows\\system32;;.]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.AprLifecycleListener"}
{"@timestamp":"2020-10-05T09:03:05.483Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T09:03:05.483Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 2758 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.web.context.ContextLoader"}
{"@timestamp":"2020-10-05T09:03:05.851Z", "log.level": "INFO", "message":"HikariPool-1 - Starting...", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:03:06.059Z", "log.level": "INFO", "message":"HikariPool-1 - Start completed.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:03:06.202Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2020-10-05T09:03:06.300Z", "log.level": "INFO", "message":"HHH000412: Hibernate Core {5.3.7.Final}", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.Version"}
{"@timestamp":"2020-10-05T09:03:06.301Z", "log.level": "INFO", "message":"HHH000206: hibernate.properties not found", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.cfg.Environment"}
{"@timestamp":"2020-10-05T09:03:06.485Z", "log.level": "INFO", "message":"HCANN000001: Hibernate Commons Annotations {5.0.4.Final}", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.annotations.common.Version"}
{"@timestamp":"2020-10-05T09:03:06.667Z", "log.level": "INFO", "message":"HHH000400: Using dialect: org.hibernate.dialect.H2Dialect", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.dialect.Dialect"}
{"@timestamp":"2020-10-05T09:03:07.631Z", "log.level":"DEBUG", "message":"drop table car if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:07.668Z", "log.level":"DEBUG", "message":"drop table owner if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:07.668Z", "log.level":"DEBUG", "message":"drop sequence if exists hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:07.671Z", "log.level":"DEBUG", "message":"create sequence hibernate_sequence start with 1 increment by 1", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:07.673Z", "log.level":"DEBUG", "message":"create table car (id bigint not null, brand varchar(255), color varchar(255), market_estimate integer not null, model varchar(255), price integer not null, register_number varchar(255), year integer not null, owner bigint, primary key (id))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:07.679Z", "log.level":"DEBUG", "message":"create table owner (ownerid bigint not null, firstname varchar(255), lastname varchar(255), primary key (ownerid))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:07.680Z", "log.level":"DEBUG", "message":"alter table car add constraint FK2mqqwvxtowv4vddvtsmvtiqa2 foreign key (owner) references owner", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:07.695Z", "log.level": "INFO", "message":"HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@18813feb'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.tool.schema.internal.SchemaCreatorImpl"}
{"@timestamp":"2020-10-05T09:03:07.699Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2020-10-05T09:03:07.731Z", "log.level": "INFO", "message":"LiveReload server is running on port 35729", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"}
{"@timestamp":"2020-10-05T09:03:08.952Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-10-05T09:03:09.025Z", "log.level": "WARN", "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration"}
{"@timestamp":"2020-10-05T09:03:09.605Z", "log.level": "INFO", "message":"Starting ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:03:09.790Z", "log.level": "INFO", "message":"Tomcat started on port(s): 8080 (http) with context path ''", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:03:09.793Z", "log.level": "INFO", "message":"Started CardatabaseApplication in 7.749 seconds (JVM running for 10.684)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:03:09.817Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.885Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.892Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.893Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.896Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.897Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.899Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.900Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.901Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.902Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:03:09.903Z", "log.level": "INFO", "message":"Hello Spring Boot", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:03:20.817Z", "log.level": "INFO", "message":"Initializing Spring DispatcherServlet 'dispatcherServlet'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T09:03:20.817Z", "log.level": "INFO", "message":"Initializing Servlet 'dispatcherServlet'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.springframework.web.servlet.DispatcherServlet"}
{"@timestamp":"2020-10-05T09:03:20.850Z", "log.level": "INFO", "message":"Completed initialization in 33 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.springframework.web.servlet.DispatcherServlet"}
{"@timestamp":"2020-10-05T09:03:20.946Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"com.packt.cardatabase.CarController","transaction.id":"250adc8f7eb871a3","trace.id":"371d5d1840e3ffb115ffa4d3856f7d22"}
{"@timestamp":"2020-10-05T09:03:20.971Z", "log.level": "INFO", "message":"HHH000397: Using ASTQueryTranslatorFactory", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.hql.internal.QueryTranslatorFactoryInitiator","transaction.id":"250adc8f7eb871a3","trace.id":"371d5d1840e3ffb115ffa4d3856f7d22"}
{"@timestamp":"2020-10-05T09:03:21.106Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.SQL","transaction.id":"250adc8f7eb871a3","trace.id":"371d5d1840e3ffb115ffa4d3856f7d22"}
{"@timestamp":"2020-10-05T09:03:21.194Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.SQL","transaction.id":"250adc8f7eb871a3","trace.id":"371d5d1840e3ffb115ffa4d3856f7d22"}
{"@timestamp":"2020-10-05T09:03:21.211Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.SQL","transaction.id":"250adc8f7eb871a3","trace.id":"371d5d1840e3ffb115ffa4d3856f7d22"}
{"@timestamp":"2020-10-05T09:03:55.915Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"92bf3ef3a01ea1b3","trace.id":"b2e6ed1e1a897b0735f330b801ff9b83"}
{"@timestamp":"2020-10-05T09:03:55.916Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"92bf3ef3a01ea1b3","trace.id":"b2e6ed1e1a897b0735f330b801ff9b83"}
{"@timestamp":"2020-10-05T09:03:55.918Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"92bf3ef3a01ea1b3","trace.id":"b2e6ed1e1a897b0735f330b801ff9b83"}
{"@timestamp":"2020-10-05T09:03:55.919Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"92bf3ef3a01ea1b3","trace.id":"b2e6ed1e1a897b0735f330b801ff9b83"}
{"@timestamp":"2020-10-05T09:07:59.098Z", "log.level":"DEBUG", "message":"In POST add", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"83c50c35b08ba9e9","trace.id":"180c2cf50bda530dba9f5bc5921ebcb3"}
{"@timestamp":"2020-10-05T09:07:59.099Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"83c50c35b08ba9e9","trace.id":"180c2cf50bda530dba9f5bc5921ebcb3"}
{"@timestamp":"2020-10-05T09:08:00.171Z", "log.level":"ERROR", "message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8888/estimateValue\": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","error.type":"java.net.ConnectException","error.message":"Connection refused: connect","error.stack_trace":"java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:493)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:482)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588)\r\n\tat java.base/java.net.Socket.connect(Socket.java:603)\r\n\tat java.base/java.net.Socket.connect(Socket.java:552)\r\n\tat java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)\r\n\tat java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)\r\n\tat java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)\r\n\tat java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)\r\n\tat java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1248)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:734)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:669)\r\n\tat org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:310)\r\n\tat com.packt.cardatabase.CarController.save(CarController.java:58)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:830)\r\n"}
{"@timestamp":"2020-10-05T09:08:00.248Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"75cc5286aee225ee","trace.id":"0c00488ff77cb7a53634db3c99b9673c"}
{"@timestamp":"2020-10-05T09:08:00.249Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"75cc5286aee225ee","trace.id":"0c00488ff77cb7a53634db3c99b9673c"}
{"@timestamp":"2020-10-05T09:08:00.254Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"75cc5286aee225ee","trace.id":"0c00488ff77cb7a53634db3c99b9673c"}
{"@timestamp":"2020-10-05T09:08:00.255Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"75cc5286aee225ee","trace.id":"0c00488ff77cb7a53634db3c99b9673c"}
{"@timestamp":"2020-10-05T09:08:07.872Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"com.packt.cardatabase.CarController","transaction.id":"4b62aa541487e1ee","trace.id":"0319f11e8c10caa4633404b8e8e4fa87"}
{"@timestamp":"2020-10-05T09:08:07.873Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"4b62aa541487e1ee","trace.id":"0319f11e8c10caa4633404b8e8e4fa87"}
{"@timestamp":"2020-10-05T09:08:07.877Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"4b62aa541487e1ee","trace.id":"0319f11e8c10caa4633404b8e8e4fa87"}
{"@timestamp":"2020-10-05T09:08:07.878Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"4b62aa541487e1ee","trace.id":"0319f11e8c10caa4633404b8e8e4fa87"}
{"@timestamp":"2020-10-05T09:10:11.268Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"com.packt.cardatabase.CarController","transaction.id":"798e4d9d18413fdf","trace.id":"fda1a3c9188d36dc966d2ea5a7963121"}
{"@timestamp":"2020-10-05T09:10:11.270Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"798e4d9d18413fdf","trace.id":"fda1a3c9188d36dc966d2ea5a7963121"}
{"@timestamp":"2020-10-05T09:10:11.275Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"798e4d9d18413fdf","trace.id":"fda1a3c9188d36dc966d2ea5a7963121"}
{"@timestamp":"2020-10-05T09:10:11.277Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"798e4d9d18413fdf","trace.id":"fda1a3c9188d36dc966d2ea5a7963121"}
{"@timestamp":"2020-10-05T09:10:14.591Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"60d1d7f9eaab20cf","trace.id":"89a27e97c49c6037a9da5fdcd340a655"}
{"@timestamp":"2020-10-05T09:10:14.592Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"60d1d7f9eaab20cf","trace.id":"89a27e97c49c6037a9da5fdcd340a655"}
{"@timestamp":"2020-10-05T09:10:14.596Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"60d1d7f9eaab20cf","trace.id":"89a27e97c49c6037a9da5fdcd340a655"}
{"@timestamp":"2020-10-05T09:10:14.598Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"60d1d7f9eaab20cf","trace.id":"89a27e97c49c6037a9da5fdcd340a655"}
{"@timestamp":"2020-10-05T09:10:18.208Z", "log.level": "WARN", "message":"Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; nested exception is java.lang.NumberFormatException: For input string: \"undefined\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","transaction.id":"80e3913df7f8046d","trace.id":"3998fcdffe35d80a908cbe781f42e7ea"}
{"@timestamp":"2020-10-05T09:10:30.039Z", "log.level":"DEBUG", "message":"In POST add", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"b599dfac99dcb652","trace.id":"21205c86a067f2ca342a0a16d87a7bc3"}
{"@timestamp":"2020-10-05T09:10:30.039Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"b599dfac99dcb652","trace.id":"21205c86a067f2ca342a0a16d87a7bc3"}
{"@timestamp":"2020-10-05T09:10:31.051Z", "log.level":"ERROR", "message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8888/estimateValue\": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","error.type":"java.net.ConnectException","error.message":"Connection refused: connect","error.stack_trace":"java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:493)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:482)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588)\r\n\tat java.base/java.net.Socket.connect(Socket.java:603)\r\n\tat java.base/java.net.Socket.connect(Socket.java:552)\r\n\tat java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)\r\n\tat java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)\r\n\tat java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)\r\n\tat java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)\r\n\tat java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1248)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:734)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:669)\r\n\tat org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:310)\r\n\tat com.packt.cardatabase.CarController.save(CarController.java:58)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:830)\r\n"}
{"@timestamp":"2020-10-05T09:10:31.081Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"com.packt.cardatabase.CarController","transaction.id":"e4fcda36926ddfa6","trace.id":"b3ae2683509333a5c3be8ae89a5ddbe0"}
{"@timestamp":"2020-10-05T09:10:31.083Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"e4fcda36926ddfa6","trace.id":"b3ae2683509333a5c3be8ae89a5ddbe0"}
{"@timestamp":"2020-10-05T09:10:31.088Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"e4fcda36926ddfa6","trace.id":"b3ae2683509333a5c3be8ae89a5ddbe0"}
{"@timestamp":"2020-10-05T09:10:31.089Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"e4fcda36926ddfa6","trace.id":"b3ae2683509333a5c3be8ae89a5ddbe0"}
{"@timestamp":"2020-10-05T09:15:46.918Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"com.packt.cardatabase.CarController","transaction.id":"2073eeb8e5736c86","trace.id":"c97a409180e796a28d7e2e19dedb0313"}
{"@timestamp":"2020-10-05T09:15:46.920Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.SQL","transaction.id":"2073eeb8e5736c86","trace.id":"c97a409180e796a28d7e2e19dedb0313"}
{"@timestamp":"2020-10-05T09:15:46.924Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.SQL","transaction.id":"2073eeb8e5736c86","trace.id":"c97a409180e796a28d7e2e19dedb0313"}
{"@timestamp":"2020-10-05T09:15:46.926Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.SQL","transaction.id":"2073eeb8e5736c86","trace.id":"c97a409180e796a28d7e2e19dedb0313"}
{"@timestamp":"2020-10-05T09:15:53.681Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"abb4aa0706e4e7c7","trace.id":"e95ceee25567ca05b3306c8340c998ea"}
{"@timestamp":"2020-10-05T09:15:53.705Z", "log.level":"DEBUG", "message":"delete from car where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"abb4aa0706e4e7c7","trace.id":"e95ceee25567ca05b3306c8340c998ea"}
{"@timestamp":"2020-10-05T09:15:58.988Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"com.packt.cardatabase.CarController","transaction.id":"399d163629d932b8","trace.id":"718e349240b85a36a283c0bd004022c4"}
{"@timestamp":"2020-10-05T09:15:58.990Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.hibernate.SQL","transaction.id":"399d163629d932b8","trace.id":"718e349240b85a36a283c0bd004022c4"}
{"@timestamp":"2020-10-05T09:15:58.992Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.hibernate.SQL","transaction.id":"399d163629d932b8","trace.id":"718e349240b85a36a283c0bd004022c4"}
{"@timestamp":"2020-10-05T09:15:58.993Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.hibernate.SQL","transaction.id":"399d163629d932b8","trace.id":"718e349240b85a36a283c0bd004022c4"}
{"@timestamp":"2020-10-05T09:16:06.225Z", "log.level":"DEBUG", "message":"In POST add", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"67fe1dd5c6598e8e","trace.id":"98d3c4476586648af4c4a9a5ad4903e3"}
{"@timestamp":"2020-10-05T09:16:06.226Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"67fe1dd5c6598e8e","trace.id":"98d3c4476586648af4c4a9a5ad4903e3"}
{"@timestamp":"2020-10-05T09:16:07.241Z", "log.level":"ERROR", "message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8888/estimateValue\": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","error.type":"java.net.ConnectException","error.message":"Connection refused: connect","error.stack_trace":"java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:493)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:482)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588)\r\n\tat java.base/java.net.Socket.connect(Socket.java:603)\r\n\tat java.base/java.net.Socket.connect(Socket.java:552)\r\n\tat java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)\r\n\tat java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)\r\n\tat java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)\r\n\tat java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)\r\n\tat java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1248)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:734)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:669)\r\n\tat org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:310)\r\n\tat com.packt.cardatabase.CarController.save(CarController.java:58)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:830)\r\n"}
{"@timestamp":"2020-10-05T09:16:07.268Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"com.packt.cardatabase.CarController","transaction.id":"9a56c20a001a8c45","trace.id":"990aa079eccf48c71e5543bc7d7863d2"}
{"@timestamp":"2020-10-05T09:16:07.269Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"9a56c20a001a8c45","trace.id":"990aa079eccf48c71e5543bc7d7863d2"}
{"@timestamp":"2020-10-05T09:16:07.272Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"9a56c20a001a8c45","trace.id":"990aa079eccf48c71e5543bc7d7863d2"}
{"@timestamp":"2020-10-05T09:16:07.273Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"9a56c20a001a8c45","trace.id":"990aa079eccf48c71e5543bc7d7863d2"}
{"@timestamp":"2020-10-05T09:16:09.041Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"com.packt.cardatabase.CarController","transaction.id":"225098ee4ce526fd","trace.id":"351c868820e870585202a02bd581583c"}
{"@timestamp":"2020-10-05T09:16:09.042Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"225098ee4ce526fd","trace.id":"351c868820e870585202a02bd581583c"}
{"@timestamp":"2020-10-05T09:16:09.044Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"225098ee4ce526fd","trace.id":"351c868820e870585202a02bd581583c"}
{"@timestamp":"2020-10-05T09:16:09.045Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"225098ee4ce526fd","trace.id":"351c868820e870585202a02bd581583c"}
{"@timestamp":"2020-10-05T09:16:23.407Z", "log.level":"DEBUG", "message":"In POST add", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"com.packt.cardatabase.CarController","transaction.id":"303e2ed33eeb1667","trace.id":"1bac1a2b6dd5e8c109cd3b5c72ea9773"}
{"@timestamp":"2020-10-05T09:16:23.408Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"com.packt.cardatabase.CarController","transaction.id":"303e2ed33eeb1667","trace.id":"1bac1a2b6dd5e8c109cd3b5c72ea9773"}
{"@timestamp":"2020-10-05T09:16:24.417Z", "log.level":"ERROR", "message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8888/estimateValue\": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","error.type":"java.net.ConnectException","error.message":"Connection refused: connect","error.stack_trace":"java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:493)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:482)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588)\r\n\tat java.base/java.net.Socket.connect(Socket.java:603)\r\n\tat java.base/java.net.Socket.connect(Socket.java:552)\r\n\tat java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)\r\n\tat java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)\r\n\tat java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)\r\n\tat java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)\r\n\tat java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1248)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)\r\n\tat java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:734)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:669)\r\n\tat org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:310)\r\n\tat com.packt.cardatabase.CarController.save(CarController.java:58)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:830)\r\n"}
{"@timestamp":"2020-10-05T09:16:24.448Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"com.packt.cardatabase.CarController","transaction.id":"cbf709e17eef0dd4","trace.id":"ad2ade7a939cfefe1e873186d2f856d5"}
{"@timestamp":"2020-10-05T09:16:24.449Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"cbf709e17eef0dd4","trace.id":"ad2ade7a939cfefe1e873186d2f856d5"}
{"@timestamp":"2020-10-05T09:16:24.454Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"cbf709e17eef0dd4","trace.id":"ad2ade7a939cfefe1e873186d2f856d5"}
{"@timestamp":"2020-10-05T09:16:24.456Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"cbf709e17eef0dd4","trace.id":"ad2ade7a939cfefe1e873186d2f856d5"}
{"@timestamp":"2020-10-05T09:23:22.384Z", "log.level": "INFO", "message":"Starting CardatabaseApplication on synapticiel with PID 10796 (C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend\\target\\classes started by developer in C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:23:22.386Z", "log.level":"DEBUG", "message":"Running with Spring Boot v2.1.2.RELEASE, Spring v5.1.4.RELEASE", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:23:22.387Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:23:22.445Z", "log.level": "INFO", "message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor"}
{"@timestamp":"2020-10-05T09:23:22.445Z", "log.level": "INFO", "message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor"}
{"@timestamp":"2020-10-05T09:23:23.687Z", "log.level": "INFO", "message":"Bootstrapping Spring Data repositories in DEFAULT mode.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:23:23.783Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 85ms. Found 2 repository interfaces.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:23:24.376Z", "log.level": "INFO", "message":"Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$56751d66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:23:24.399Z", "log.level": "INFO", "message":"Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$d5f56a98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:23:25.047Z", "log.level": "INFO", "message":"Tomcat initialized with port(s): 8080 (http)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:23:25.073Z", "log.level": "INFO", "message":"Initializing ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:23:25.087Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2020-10-05T09:23:25.087Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/9.0.14]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2020-10-05T09:23:25.123Z", "log.level": "INFO", "message":"The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\\es\\elasticsearch\\jdk\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:/es/elasticsearch/jdk/bin/client;C:/es/elasticsearch/jdk/bin;C:\\python38\\Scripts\\;C:\\python38\\;C:\\Program Files\\Java\\jdk1.8.0_251\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\Program Files\\Lenovo\\Fingerprint Manager Pro\\;C:\\Program Files (x86)\\Intel\\UCRT\\;C:\\Program Files\\Intel\\UCRT\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Git\\cmd;C:\\work\\installed\\open_ssl\\bin;C:\\work\\installed\\TortoiseGit\\bin;C:\\Program Files\\PuTTY\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\es\\logstash\\bin;C:\\curl\\bin;C:\\Go\\bin;C:\\Program Files (x86)\\Yarn\\bin\\;C:\\Program Files\\nodejs\\;C:\\Users\\developer\\.windows-build-tools\\python27\\;c:\\work\\installed\\android_sdk\\platform-tools;C:\\Users\\developer\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\developer\\.windows-build-tools\\python27\\Scripts;C:\\grails-2.5.0\\bin;C:\\es\\labs\\docker;C:\\es\\labs\\docker;C:\\Program Files\\Tesseract-OCR;C:\\Go\\bin;C:\\Wireshark;C:\\Users\\developer\\AppData\\Local\\Yarn\\bin;C:\\Users\\developer\\AppData\\Roaming\\npm;C:\\Windows\\system32;;.]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.AprLifecycleListener"}
{"@timestamp":"2020-10-05T09:23:25.273Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T09:23:25.273Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 2828 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.web.context.ContextLoader"}
{"@timestamp":"2020-10-05T09:23:25.639Z", "log.level": "INFO", "message":"HikariPool-1 - Starting...", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:23:25.868Z", "log.level": "INFO", "message":"HikariPool-1 - Start completed.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:23:25.996Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2020-10-05T09:23:26.082Z", "log.level": "INFO", "message":"HHH000412: Hibernate Core {5.3.7.Final}", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.Version"}
{"@timestamp":"2020-10-05T09:23:26.084Z", "log.level": "INFO", "message":"HHH000206: hibernate.properties not found", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.cfg.Environment"}
{"@timestamp":"2020-10-05T09:23:26.284Z", "log.level": "INFO", "message":"HCANN000001: Hibernate Commons Annotations {5.0.4.Final}", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.annotations.common.Version"}
{"@timestamp":"2020-10-05T09:23:26.497Z", "log.level": "INFO", "message":"HHH000400: Using dialect: org.hibernate.dialect.H2Dialect", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.dialect.Dialect"}
{"@timestamp":"2020-10-05T09:23:27.426Z", "log.level":"DEBUG", "message":"drop table car if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:27.466Z", "log.level":"DEBUG", "message":"drop table owner if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:27.466Z", "log.level":"DEBUG", "message":"drop sequence if exists hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:27.469Z", "log.level":"DEBUG", "message":"create sequence hibernate_sequence start with 1 increment by 1", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:27.471Z", "log.level":"DEBUG", "message":"create table car (id bigint not null, brand varchar(255), color varchar(255), market_estimate integer not null, model varchar(255), price integer not null, register_number varchar(255), year integer not null, owner bigint, primary key (id))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:27.477Z", "log.level":"DEBUG", "message":"create table owner (ownerid bigint not null, firstname varchar(255), lastname varchar(255), primary key (ownerid))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:27.478Z", "log.level":"DEBUG", "message":"alter table car add constraint FK2mqqwvxtowv4vddvtsmvtiqa2 foreign key (owner) references owner", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:27.491Z", "log.level": "INFO", "message":"HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@786bc0b'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.tool.schema.internal.SchemaCreatorImpl"}
{"@timestamp":"2020-10-05T09:23:27.495Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2020-10-05T09:23:27.527Z", "log.level": "INFO", "message":"LiveReload server is running on port 35729", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"}
{"@timestamp":"2020-10-05T09:23:28.800Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-10-05T09:23:28.889Z", "log.level": "WARN", "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration"}
{"@timestamp":"2020-10-05T09:23:29.496Z", "log.level": "INFO", "message":"Starting ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:23:29.672Z", "log.level": "INFO", "message":"Tomcat started on port(s): 8080 (http) with context path ''", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:23:29.675Z", "log.level": "INFO", "message":"Started CardatabaseApplication in 7.884 seconds (JVM running for 10.505)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:23:29.706Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.806Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.813Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.814Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.816Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.817Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.836Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.837Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.838Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.838Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:23:29.840Z", "log.level": "INFO", "message":"Hello Spring Boot", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:23:32.226Z", "log.level": "INFO", "message":"Initializing Spring DispatcherServlet 'dispatcherServlet'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T09:23:32.226Z", "log.level": "INFO", "message":"Initializing Servlet 'dispatcherServlet'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.springframework.web.servlet.DispatcherServlet"}
{"@timestamp":"2020-10-05T09:23:32.274Z", "log.level": "INFO", "message":"Completed initialization in 48 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.springframework.web.servlet.DispatcherServlet"}
{"@timestamp":"2020-10-05T09:23:32.378Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"com.packt.cardatabase.CarController","transaction.id":"4412ebcb98c7f0ce","trace.id":"f075f4c64773f8f47a3ac5112734d8d6"}
{"@timestamp":"2020-10-05T09:23:32.400Z", "log.level": "INFO", "message":"HHH000397: Using ASTQueryTranslatorFactory", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.hql.internal.QueryTranslatorFactoryInitiator","transaction.id":"4412ebcb98c7f0ce","trace.id":"f075f4c64773f8f47a3ac5112734d8d6"}
{"@timestamp":"2020-10-05T09:23:32.511Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"4412ebcb98c7f0ce","trace.id":"f075f4c64773f8f47a3ac5112734d8d6"}
{"@timestamp":"2020-10-05T09:23:32.600Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"4412ebcb98c7f0ce","trace.id":"f075f4c64773f8f47a3ac5112734d8d6"}
{"@timestamp":"2020-10-05T09:23:32.616Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"4412ebcb98c7f0ce","trace.id":"f075f4c64773f8f47a3ac5112734d8d6"}
{"@timestamp":"2020-10-05T09:23:41.047Z", "log.level":"DEBUG", "message":"In POST add", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"1bfbb6e591d3ea2f","trace.id":"331d92a30159d3df1b74e139a8e0cadd"}
{"@timestamp":"2020-10-05T09:23:41.048Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"1bfbb6e591d3ea2f","trace.id":"331d92a30159d3df1b74e139a8e0cadd"}
{"@timestamp":"2020-10-05T09:23:41.396Z", "log.level":"DEBUG", "message":"com.packt.cardatabase.domain.MarketEstimate@24a095ee", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"1bfbb6e591d3ea2f","trace.id":"331d92a30159d3df1b74e139a8e0cadd"}
{"@timestamp":"2020-10-05T09:23:41.400Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"1bfbb6e591d3ea2f","trace.id":"331d92a30159d3df1b74e139a8e0cadd"}
{"@timestamp":"2020-10-05T09:23:41.401Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"1bfbb6e591d3ea2f","trace.id":"331d92a30159d3df1b74e139a8e0cadd"}
{"@timestamp":"2020-10-05T09:23:41.416Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"com.packt.cardatabase.CarController","transaction.id":"0c1b9c48a95e003b","trace.id":"75401649f8f9a2a476250ae5c3a958e1"}
{"@timestamp":"2020-10-05T09:23:41.417Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"0c1b9c48a95e003b","trace.id":"75401649f8f9a2a476250ae5c3a958e1"}
{"@timestamp":"2020-10-05T09:23:41.421Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"0c1b9c48a95e003b","trace.id":"75401649f8f9a2a476250ae5c3a958e1"}
{"@timestamp":"2020-10-05T09:23:41.422Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"0c1b9c48a95e003b","trace.id":"75401649f8f9a2a476250ae5c3a958e1"}
{"@timestamp":"2020-10-05T09:23:46.326Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"5856e6998ca83cbd","trace.id":"4405e60d75553f6f7d824ab35e2b5ef4"}
{"@timestamp":"2020-10-05T09:23:46.327Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"5856e6998ca83cbd","trace.id":"4405e60d75553f6f7d824ab35e2b5ef4"}
{"@timestamp":"2020-10-05T09:23:46.329Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"5856e6998ca83cbd","trace.id":"4405e60d75553f6f7d824ab35e2b5ef4"}
{"@timestamp":"2020-10-05T09:23:46.330Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"5856e6998ca83cbd","trace.id":"4405e60d75553f6f7d824ab35e2b5ef4"}
{"@timestamp":"2020-10-05T09:27:13.254Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"com.packt.cardatabase.CarController","transaction.id":"6ce3f2757c79789a","trace.id":"ac24b2fa38708a9534e798e2e6dd006b"}
{"@timestamp":"2020-10-05T09:27:13.258Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"6ce3f2757c79789a","trace.id":"ac24b2fa38708a9534e798e2e6dd006b"}
{"@timestamp":"2020-10-05T09:27:13.267Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"6ce3f2757c79789a","trace.id":"ac24b2fa38708a9534e798e2e6dd006b"}
{"@timestamp":"2020-10-05T09:27:13.269Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"6ce3f2757c79789a","trace.id":"ac24b2fa38708a9534e798e2e6dd006b"}
{"@timestamp":"2020-10-05T09:28:23.055Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"com.packt.cardatabase.CarController","transaction.id":"b7cde80fa17dd32b","trace.id":"1671c3870ae3f71073ebe474abbfe406"}
{"@timestamp":"2020-10-05T09:28:23.056Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"b7cde80fa17dd32b","trace.id":"1671c3870ae3f71073ebe474abbfe406"}
{"@timestamp":"2020-10-05T09:28:23.061Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"b7cde80fa17dd32b","trace.id":"1671c3870ae3f71073ebe474abbfe406"}
{"@timestamp":"2020-10-05T09:28:23.062Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-3","log.logger":"org.hibernate.SQL","transaction.id":"b7cde80fa17dd32b","trace.id":"1671c3870ae3f71073ebe474abbfe406"}
{"@timestamp":"2020-10-05T09:29:18.065Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"com.packt.cardatabase.CarController","transaction.id":"3e9e859c747e4bc6","trace.id":"1e31535f9f1d49eea16a9443f885fd25"}
{"@timestamp":"2020-10-05T09:29:18.066Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"3e9e859c747e4bc6","trace.id":"1e31535f9f1d49eea16a9443f885fd25"}
{"@timestamp":"2020-10-05T09:29:18.070Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"3e9e859c747e4bc6","trace.id":"1e31535f9f1d49eea16a9443f885fd25"}
{"@timestamp":"2020-10-05T09:29:18.072Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"3e9e859c747e4bc6","trace.id":"1e31535f9f1d49eea16a9443f885fd25"}
{"@timestamp":"2020-10-05T09:29:34.334Z", "log.level":"DEBUG", "message":"In POST add", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"3c75336a25255a7f","trace.id":"25d3f09bd38c7f374c57c7986845d4c2"}
{"@timestamp":"2020-10-05T09:29:34.334Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"3c75336a25255a7f","trace.id":"25d3f09bd38c7f374c57c7986845d4c2"}
{"@timestamp":"2020-10-05T09:29:34.357Z", "log.level":"DEBUG", "message":"com.packt.cardatabase.domain.MarketEstimate@4895c287", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"3c75336a25255a7f","trace.id":"25d3f09bd38c7f374c57c7986845d4c2"}
{"@timestamp":"2020-10-05T09:29:34.358Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"3c75336a25255a7f","trace.id":"25d3f09bd38c7f374c57c7986845d4c2"}
{"@timestamp":"2020-10-05T09:29:34.360Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"3c75336a25255a7f","trace.id":"25d3f09bd38c7f374c57c7986845d4c2"}
{"@timestamp":"2020-10-05T09:29:34.368Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"com.packt.cardatabase.CarController","transaction.id":"d699dab1352605af","trace.id":"27d336e14179e2742272f3b7c28baf2e"}
{"@timestamp":"2020-10-05T09:29:34.368Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"d699dab1352605af","trace.id":"27d336e14179e2742272f3b7c28baf2e"}
{"@timestamp":"2020-10-05T09:29:34.371Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"d699dab1352605af","trace.id":"27d336e14179e2742272f3b7c28baf2e"}
{"@timestamp":"2020-10-05T09:29:34.371Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"d699dab1352605af","trace.id":"27d336e14179e2742272f3b7c28baf2e"}
{"@timestamp":"2020-10-05T09:29:58.391Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"com.packt.cardatabase.CarController","transaction.id":"0c6fef4c9e287cab","trace.id":"fdf6fdc653890177184b6f0b99067c0b"}
{"@timestamp":"2020-10-05T09:29:58.393Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"0c6fef4c9e287cab","trace.id":"fdf6fdc653890177184b6f0b99067c0b"}
{"@timestamp":"2020-10-05T09:29:58.397Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"0c6fef4c9e287cab","trace.id":"fdf6fdc653890177184b6f0b99067c0b"}
{"@timestamp":"2020-10-05T09:29:58.399Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"0c6fef4c9e287cab","trace.id":"fdf6fdc653890177184b6f0b99067c0b"}
{"@timestamp":"2020-10-05T09:30:11.127Z", "log.level":"DEBUG", "message":"In PUT by id", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a1ba05422bbf642f","trace.id":"9ee01572cceeac24c79203442ed52845"}
{"@timestamp":"2020-10-05T09:30:11.129Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"a1ba05422bbf642f","trace.id":"9ee01572cceeac24c79203442ed52845"}
{"@timestamp":"2020-10-05T09:30:11.132Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a1ba05422bbf642f","trace.id":"9ee01572cceeac24c79203442ed52845"}
{"@timestamp":"2020-10-05T09:30:11.143Z", "log.level":"DEBUG", "message":"com.packt.cardatabase.domain.MarketEstimate@69ca9d7c", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a1ba05422bbf642f","trace.id":"9ee01572cceeac24c79203442ed52845"}
{"@timestamp":"2020-10-05T09:30:11.147Z", "log.level":"DEBUG", "message":"update car set brand=?, color=?, market_estimate=?, model=?, owner=?, price=?, register_number=?, year=? where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"a1ba05422bbf642f","trace.id":"9ee01572cceeac24c79203442ed52845"}
{"@timestamp":"2020-10-05T09:30:13.850Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"e0d506f99f6c2a50","trace.id":"8143220b2fcaf2174469f06d2ee157cc"}
{"@timestamp":"2020-10-05T09:30:13.850Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"e0d506f99f6c2a50","trace.id":"8143220b2fcaf2174469f06d2ee157cc"}
{"@timestamp":"2020-10-05T09:30:13.853Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"e0d506f99f6c2a50","trace.id":"8143220b2fcaf2174469f06d2ee157cc"}
{"@timestamp":"2020-10-05T09:30:13.854Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"e0d506f99f6c2a50","trace.id":"8143220b2fcaf2174469f06d2ee157cc"}
{"@timestamp":"2020-10-05T09:30:27.610Z", "log.level":"DEBUG", "message":"In PUT by id", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"com.packt.cardatabase.CarController","transaction.id":"ca40b8f6f79bb154","trace.id":"bf92d13fed2bdfae977186bda58e6a86"}
{"@timestamp":"2020-10-05T09:30:27.611Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.hibernate.SQL","transaction.id":"ca40b8f6f79bb154","trace.id":"bf92d13fed2bdfae977186bda58e6a86"}
{"@timestamp":"2020-10-05T09:30:27.613Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"com.packt.cardatabase.CarController","transaction.id":"ca40b8f6f79bb154","trace.id":"bf92d13fed2bdfae977186bda58e6a86"}
{"@timestamp":"2020-10-05T09:30:27.625Z", "log.level":"DEBUG", "message":"com.packt.cardatabase.domain.MarketEstimate@188882bb", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"com.packt.cardatabase.CarController","transaction.id":"ca40b8f6f79bb154","trace.id":"bf92d13fed2bdfae977186bda58e6a86"}
{"@timestamp":"2020-10-05T09:30:27.626Z", "log.level":"DEBUG", "message":"update car set brand=?, color=?, market_estimate=?, model=?, owner=?, price=?, register_number=?, year=? where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.hibernate.SQL","transaction.id":"ca40b8f6f79bb154","trace.id":"bf92d13fed2bdfae977186bda58e6a86"}
{"@timestamp":"2020-10-05T09:30:31.075Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"com.packt.cardatabase.CarController","transaction.id":"c85c338a5f36adfa","trace.id":"10bc925631714a0fb14947162b1a905a"}
{"@timestamp":"2020-10-05T09:30:31.076Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"c85c338a5f36adfa","trace.id":"10bc925631714a0fb14947162b1a905a"}
{"@timestamp":"2020-10-05T09:30:31.079Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"c85c338a5f36adfa","trace.id":"10bc925631714a0fb14947162b1a905a"}
{"@timestamp":"2020-10-05T09:30:31.080Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"c85c338a5f36adfa","trace.id":"10bc925631714a0fb14947162b1a905a"}
{"@timestamp":"2020-10-05T09:30:52.874Z", "log.level":"DEBUG", "message":"In PUT by id", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"com.packt.cardatabase.CarController","transaction.id":"5fbc2dc6494ff4a4","trace.id":"c1c2a09a635584084b4af828c38f9cef"}
{"@timestamp":"2020-10-05T09:30:52.875Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"5fbc2dc6494ff4a4","trace.id":"c1c2a09a635584084b4af828c38f9cef"}
{"@timestamp":"2020-10-05T09:30:52.877Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"com.packt.cardatabase.CarController","transaction.id":"5fbc2dc6494ff4a4","trace.id":"c1c2a09a635584084b4af828c38f9cef"}
{"@timestamp":"2020-10-05T09:30:52.890Z", "log.level":"DEBUG", "message":"com.packt.cardatabase.domain.MarketEstimate@2000a009", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"com.packt.cardatabase.CarController","transaction.id":"5fbc2dc6494ff4a4","trace.id":"c1c2a09a635584084b4af828c38f9cef"}
{"@timestamp":"2020-10-05T09:30:52.892Z", "log.level":"DEBUG", "message":"update car set brand=?, color=?, market_estimate=?, model=?, owner=?, price=?, register_number=?, year=? where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"5fbc2dc6494ff4a4","trace.id":"c1c2a09a635584084b4af828c38f9cef"}
{"@timestamp":"2020-10-05T09:30:56.464Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"com.packt.cardatabase.CarController","transaction.id":"1da7deb869bdb950","trace.id":"ebed37d2f06f453ffd1d0fdcecdd12cb"}
{"@timestamp":"2020-10-05T09:30:56.464Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"1da7deb869bdb950","trace.id":"ebed37d2f06f453ffd1d0fdcecdd12cb"}
{"@timestamp":"2020-10-05T09:30:56.467Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"1da7deb869bdb950","trace.id":"ebed37d2f06f453ffd1d0fdcecdd12cb"}
{"@timestamp":"2020-10-05T09:30:56.468Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"1da7deb869bdb950","trace.id":"ebed37d2f06f453ffd1d0fdcecdd12cb"}
{"@timestamp":"2020-10-05T09:31:12.423Z", "log.level":"DEBUG", "message":"In PUT by id", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a3ed182a0d00573d","trace.id":"865aecdfcad478af8672a2014bbc0f37"}
{"@timestamp":"2020-10-05T09:31:12.424Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"a3ed182a0d00573d","trace.id":"865aecdfcad478af8672a2014bbc0f37"}
{"@timestamp":"2020-10-05T09:31:12.426Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a3ed182a0d00573d","trace.id":"865aecdfcad478af8672a2014bbc0f37"}
{"@timestamp":"2020-10-05T09:31:12.438Z", "log.level":"DEBUG", "message":"com.packt.cardatabase.domain.MarketEstimate@76865305", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a3ed182a0d00573d","trace.id":"865aecdfcad478af8672a2014bbc0f37"}
{"@timestamp":"2020-10-05T09:31:12.440Z", "log.level":"DEBUG", "message":"update car set brand=?, color=?, market_estimate=?, model=?, owner=?, price=?, register_number=?, year=? where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"a3ed182a0d00573d","trace.id":"865aecdfcad478af8672a2014bbc0f37"}
{"@timestamp":"2020-10-05T09:37:16.283Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"com.packt.cardatabase.CarController","transaction.id":"290615e91410bb98","trace.id":"00dc18df9140d52cae72c95d04b4e5d4"}
{"@timestamp":"2020-10-05T09:37:16.285Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"290615e91410bb98","trace.id":"00dc18df9140d52cae72c95d04b4e5d4"}
{"@timestamp":"2020-10-05T09:37:16.288Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"290615e91410bb98","trace.id":"00dc18df9140d52cae72c95d04b4e5d4"}
{"@timestamp":"2020-10-05T09:37:16.289Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"290615e91410bb98","trace.id":"00dc18df9140d52cae72c95d04b4e5d4"}
{"@timestamp":"2020-10-05T09:37:29.191Z", "log.level":"DEBUG", "message":"In PUT by id", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a4a4f9bc71c06f18","trace.id":"2cf579863b8f97cfaf026b2bd5af5b2e"}
{"@timestamp":"2020-10-05T09:37:29.193Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"a4a4f9bc71c06f18","trace.id":"2cf579863b8f97cfaf026b2bd5af5b2e"}
{"@timestamp":"2020-10-05T09:37:29.196Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Scoda&model=Octavia&year=2016", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a4a4f9bc71c06f18","trace.id":"2cf579863b8f97cfaf026b2bd5af5b2e"}
{"@timestamp":"2020-10-05T09:37:29.215Z", "log.level":"DEBUG", "message":"com.packt.cardatabase.domain.MarketEstimate@492ae188", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"com.packt.cardatabase.CarController","transaction.id":"a4a4f9bc71c06f18","trace.id":"2cf579863b8f97cfaf026b2bd5af5b2e"}
{"@timestamp":"2020-10-05T09:37:29.216Z", "log.level":"DEBUG", "message":"update car set brand=?, color=?, market_estimate=?, model=?, owner=?, price=?, register_number=?, year=? where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"a4a4f9bc71c06f18","trace.id":"2cf579863b8f97cfaf026b2bd5af5b2e"}
{"@timestamp":"2020-10-05T09:40:09.272Z", "log.level": "INFO", "message":"Starting CardatabaseApplication on synapticiel with PID 3004 (C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend\\target\\classes started by developer in C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:40:09.274Z", "log.level":"DEBUG", "message":"Running with Spring Boot v2.1.2.RELEASE, Spring v5.1.4.RELEASE", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:40:09.275Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:40:09.328Z", "log.level": "INFO", "message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor"}
{"@timestamp":"2020-10-05T09:40:09.328Z", "log.level": "INFO", "message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor"}
{"@timestamp":"2020-10-05T09:40:10.542Z", "log.level": "INFO", "message":"Bootstrapping Spring Data repositories in DEFAULT mode.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:40:10.621Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 70ms. Found 2 repository interfaces.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:40:11.242Z", "log.level": "INFO", "message":"Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e26cd7ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:40:11.267Z", "log.level": "INFO", "message":"Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$61ed2521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:40:11.919Z", "log.level": "INFO", "message":"Tomcat initialized with port(s): 8080 (http)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:40:11.938Z", "log.level": "INFO", "message":"Initializing ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:40:11.950Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2020-10-05T09:40:11.950Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/9.0.14]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2020-10-05T09:40:11.982Z", "log.level": "INFO", "message":"The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\\es\\elasticsearch\\jdk\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:/es/elasticsearch/jdk/bin/client;C:/es/elasticsearch/jdk/bin;C:\\python38\\Scripts\\;C:\\python38\\;C:\\Program Files\\Java\\jdk1.8.0_251\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\Program Files\\Lenovo\\Fingerprint Manager Pro\\;C:\\Program Files (x86)\\Intel\\UCRT\\;C:\\Program Files\\Intel\\UCRT\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Git\\cmd;C:\\work\\installed\\open_ssl\\bin;C:\\work\\installed\\TortoiseGit\\bin;C:\\Program Files\\PuTTY\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\es\\logstash\\bin;C:\\curl\\bin;C:\\Go\\bin;C:\\Program Files (x86)\\Yarn\\bin\\;C:\\Program Files\\nodejs\\;C:\\Users\\developer\\.windows-build-tools\\python27\\;c:\\work\\installed\\android_sdk\\platform-tools;C:\\Users\\developer\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\developer\\.windows-build-tools\\python27\\Scripts;C:\\grails-2.5.0\\bin;C:\\es\\labs\\docker;C:\\es\\labs\\docker;C:\\Program Files\\Tesseract-OCR;C:\\Go\\bin;C:\\Wireshark;C:\\Users\\developer\\AppData\\Local\\Yarn\\bin;C:\\Users\\developer\\AppData\\Roaming\\npm;C:\\Windows\\system32;;.]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.AprLifecycleListener"}
{"@timestamp":"2020-10-05T09:40:12.117Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T09:40:12.117Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 2788 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.web.context.ContextLoader"}
{"@timestamp":"2020-10-05T09:40:12.480Z", "log.level": "INFO", "message":"HikariPool-1 - Starting...", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:40:12.709Z", "log.level": "INFO", "message":"HikariPool-1 - Start completed.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:40:12.850Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2020-10-05T09:40:12.952Z", "log.level": "INFO", "message":"HHH000412: Hibernate Core {5.3.7.Final}", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.Version"}
{"@timestamp":"2020-10-05T09:40:12.953Z", "log.level": "INFO", "message":"HHH000206: hibernate.properties not found", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.cfg.Environment"}
{"@timestamp":"2020-10-05T09:40:13.134Z", "log.level": "INFO", "message":"HCANN000001: Hibernate Commons Annotations {5.0.4.Final}", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.annotations.common.Version"}
{"@timestamp":"2020-10-05T09:40:13.315Z", "log.level": "INFO", "message":"HHH000400: Using dialect: org.hibernate.dialect.H2Dialect", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.dialect.Dialect"}
{"@timestamp":"2020-10-05T09:40:14.268Z", "log.level":"DEBUG", "message":"drop table car if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:14.303Z", "log.level":"DEBUG", "message":"drop table owner if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:14.303Z", "log.level":"DEBUG", "message":"drop sequence if exists hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:14.306Z", "log.level":"DEBUG", "message":"create sequence hibernate_sequence start with 1 increment by 1", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:14.308Z", "log.level":"DEBUG", "message":"create table car (id bigint not null, brand varchar(255), color varchar(255), market_estimate integer not null, model varchar(255), price integer not null, register_number varchar(255), year integer not null, owner bigint, primary key (id))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:14.313Z", "log.level":"DEBUG", "message":"create table owner (ownerid bigint not null, firstname varchar(255), lastname varchar(255), primary key (ownerid))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:14.315Z", "log.level":"DEBUG", "message":"alter table car add constraint FK2mqqwvxtowv4vddvtsmvtiqa2 foreign key (owner) references owner", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:14.326Z", "log.level": "INFO", "message":"HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@ad89a2a'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.tool.schema.internal.SchemaCreatorImpl"}
{"@timestamp":"2020-10-05T09:40:14.329Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2020-10-05T09:40:14.357Z", "log.level": "INFO", "message":"LiveReload server is running on port 35729", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"}
{"@timestamp":"2020-10-05T09:40:15.508Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-10-05T09:40:15.594Z", "log.level": "WARN", "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration"}
{"@timestamp":"2020-10-05T09:40:16.192Z", "log.level": "INFO", "message":"Starting ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:40:16.388Z", "log.level": "INFO", "message":"Tomcat started on port(s): 8080 (http) with context path ''", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:40:16.391Z", "log.level": "INFO", "message":"Started CardatabaseApplication in 7.816 seconds (JVM running for 10.447)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:40:16.413Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.493Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.499Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.500Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.502Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.503Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.505Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.524Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.525Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.526Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:40:16.528Z", "log.level": "INFO", "message":"Hello Spring Boot", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:40:20.599Z", "log.level": "INFO", "message":"Initializing Spring DispatcherServlet 'dispatcherServlet'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T09:40:20.599Z", "log.level": "INFO", "message":"Initializing Servlet 'dispatcherServlet'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.springframework.web.servlet.DispatcherServlet"}
{"@timestamp":"2020-10-05T09:40:20.651Z", "log.level": "INFO", "message":"Completed initialization in 52 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.springframework.web.servlet.DispatcherServlet"}
{"@timestamp":"2020-10-05T09:40:20.758Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"com.packt.cardatabase.CarController","transaction.id":"af38dfcfac396147","trace.id":"f6dd2f99877e4696598dc91f8c2059f0"}
{"@timestamp":"2020-10-05T09:40:20.780Z", "log.level": "INFO", "message":"HHH000397: Using ASTQueryTranslatorFactory", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.hql.internal.QueryTranslatorFactoryInitiator","transaction.id":"af38dfcfac396147","trace.id":"f6dd2f99877e4696598dc91f8c2059f0"}
{"@timestamp":"2020-10-05T09:40:20.881Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"af38dfcfac396147","trace.id":"f6dd2f99877e4696598dc91f8c2059f0"}
{"@timestamp":"2020-10-05T09:40:20.968Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"af38dfcfac396147","trace.id":"f6dd2f99877e4696598dc91f8c2059f0"}
{"@timestamp":"2020-10-05T09:40:20.982Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"af38dfcfac396147","trace.id":"f6dd2f99877e4696598dc91f8c2059f0"}
{"@timestamp":"2020-10-05T09:40:35.753Z", "log.level":"DEBUG", "message":"In PUT by id", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"006938dc47ce218c","trace.id":"f584eaee765939b1dc2d2b8be3e48247"}
{"@timestamp":"2020-10-05T09:40:35.754Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"006938dc47ce218c","trace.id":"f584eaee765939b1dc2d2b8be3e48247"}
{"@timestamp":"2020-10-05T09:40:35.756Z", "log.level":"DEBUG", "message":"http://localhost:8888/estimateValue?brand=Toyota&model=Prius&year=2018", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"006938dc47ce218c","trace.id":"f584eaee765939b1dc2d2b8be3e48247"}
{"@timestamp":"2020-10-05T09:40:35.805Z", "log.level":"DEBUG", "message":"com.packt.cardatabase.domain.MarketEstimate@12fa4ac3", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"com.packt.cardatabase.CarController","transaction.id":"006938dc47ce218c","trace.id":"f584eaee765939b1dc2d2b8be3e48247"}
{"@timestamp":"2020-10-05T09:40:35.812Z", "log.level":"DEBUG", "message":"update car set brand=?, color=?, market_estimate=?, model=?, owner=?, price=?, register_number=?, year=? where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"006938dc47ce218c","trace.id":"f584eaee765939b1dc2d2b8be3e48247"}
{"@timestamp":"2020-10-05T09:40:35.818Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-4","log.logger":"org.hibernate.SQL","transaction.id":"006938dc47ce218c","trace.id":"f584eaee765939b1dc2d2b8be3e48247"}
{"@timestamp":"2020-10-05T09:40:41.239Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"com.packt.cardatabase.CarController","transaction.id":"613f9c863f19ca6e","trace.id":"c24b864bff518eb4f6d110055997cd34"}
{"@timestamp":"2020-10-05T09:40:41.240Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.hibernate.SQL","transaction.id":"613f9c863f19ca6e","trace.id":"c24b864bff518eb4f6d110055997cd34"}
{"@timestamp":"2020-10-05T09:40:41.242Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.hibernate.SQL","transaction.id":"613f9c863f19ca6e","trace.id":"c24b864bff518eb4f6d110055997cd34"}
{"@timestamp":"2020-10-05T09:40:41.244Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-6","log.logger":"org.hibernate.SQL","transaction.id":"613f9c863f19ca6e","trace.id":"c24b864bff518eb4f6d110055997cd34"}
{"@timestamp":"2020-10-05T09:41:29.276Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"com.packt.cardatabase.CarController","transaction.id":"cfec7db6520232b8","trace.id":"e04733c105d0193477e56dd5e8d39331"}
{"@timestamp":"2020-10-05T09:41:29.276Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"cfec7db6520232b8","trace.id":"e04733c105d0193477e56dd5e8d39331"}
{"@timestamp":"2020-10-05T09:41:29.279Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"cfec7db6520232b8","trace.id":"e04733c105d0193477e56dd5e8d39331"}
{"@timestamp":"2020-10-05T09:41:29.280Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-8","log.logger":"org.hibernate.SQL","transaction.id":"cfec7db6520232b8","trace.id":"e04733c105d0193477e56dd5e8d39331"}
{"@timestamp":"2020-10-05T09:41:33.610Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"7c09b827d943c052","trace.id":"98fe03fc51b462a5306566b04b557e19"}
{"@timestamp":"2020-10-05T09:41:33.621Z", "log.level":"DEBUG", "message":"delete from car where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-10","log.logger":"org.hibernate.SQL","transaction.id":"7c09b827d943c052","trace.id":"98fe03fc51b462a5306566b04b557e19"}
{"@timestamp":"2020-10-05T09:41:35.307Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"com.packt.cardatabase.CarController","transaction.id":"492a42719f12fc2d","trace.id":"98d0a4ad85cddd2d468ea96e62ad3500"}
{"@timestamp":"2020-10-05T09:41:35.308Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"492a42719f12fc2d","trace.id":"98d0a4ad85cddd2d468ea96e62ad3500"}
{"@timestamp":"2020-10-05T09:41:35.311Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"492a42719f12fc2d","trace.id":"98d0a4ad85cddd2d468ea96e62ad3500"}
{"@timestamp":"2020-10-05T09:41:35.312Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-2","log.logger":"org.hibernate.SQL","transaction.id":"492a42719f12fc2d","trace.id":"98d0a4ad85cddd2d468ea96e62ad3500"}
{"@timestamp":"2020-10-05T09:44:20.945Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"com.packt.cardatabase.CarController","transaction.id":"5c9034763e5606e0","trace.id":"bc65be079451c6a464e55d70bcf9136b"}
{"@timestamp":"2020-10-05T09:44:20.946Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"5c9034763e5606e0","trace.id":"bc65be079451c6a464e55d70bcf9136b"}
{"@timestamp":"2020-10-05T09:44:20.948Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"5c9034763e5606e0","trace.id":"bc65be079451c6a464e55d70bcf9136b"}
{"@timestamp":"2020-10-05T09:44:20.949Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-5","log.logger":"org.hibernate.SQL","transaction.id":"5c9034763e5606e0","trace.id":"bc65be079451c6a464e55d70bcf9136b"}
{"@timestamp":"2020-10-05T09:44:31.451Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_0_, car0_.brand as brand2_0_0_, car0_.color as color3_0_0_, car0_.market_estimate as market_e4_0_0_, car0_.model as model5_0_0_, car0_.owner as owner9_0_0_, car0_.price as price6_0_0_, car0_.register_number as register7_0_0_, car0_.year as year8_0_0_ from car car0_ where car0_.id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"c43ed2e6c2f4bffa","trace.id":"39ddabe09c56546ba2344a3b5c521b5a"}
{"@timestamp":"2020-10-05T09:44:31.454Z", "log.level":"DEBUG", "message":"delete from car where id=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-7","log.logger":"org.hibernate.SQL","transaction.id":"c43ed2e6c2f4bffa","trace.id":"39ddabe09c56546ba2344a3b5c521b5a"}
{"@timestamp":"2020-10-05T09:44:31.563Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"com.packt.cardatabase.CarController","transaction.id":"96faca806c05e25b","trace.id":"913f5c66f00e2b8166fc9eae7a3c7a6e"}
{"@timestamp":"2020-10-05T09:44:31.563Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"96faca806c05e25b","trace.id":"913f5c66f00e2b8166fc9eae7a3c7a6e"}
{"@timestamp":"2020-10-05T09:44:31.566Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-9","log.logger":"org.hibernate.SQL","transaction.id":"96faca806c05e25b","trace.id":"913f5c66f00e2b8166fc9eae7a3c7a6e"}
{"@timestamp":"2020-10-05T09:44:41.913Z", "log.level":"DEBUG", "message":"In GET All", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"com.packt.cardatabase.CarController","transaction.id":"49f2a1ec723e5a2b","trace.id":"265d4f07c9a323167a34a7cb5382bed6"}
{"@timestamp":"2020-10-05T09:44:41.913Z", "log.level":"DEBUG", "message":"select car0_.id as id1_0_, car0_.brand as brand2_0_, car0_.color as color3_0_, car0_.market_estimate as market_e4_0_, car0_.model as model5_0_, car0_.owner as owner9_0_, car0_.price as price6_0_, car0_.register_number as register7_0_, car0_.year as year8_0_ from car car0_", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.SQL","transaction.id":"49f2a1ec723e5a2b","trace.id":"265d4f07c9a323167a34a7cb5382bed6"}
{"@timestamp":"2020-10-05T09:44:41.919Z", "log.level":"DEBUG", "message":"select owner0_.ownerid as ownerid1_1_0_, owner0_.firstname as firstnam2_1_0_, owner0_.lastname as lastname3_1_0_ from owner owner0_ where owner0_.ownerid=?", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"http-nio-8080-exec-1","log.logger":"org.hibernate.SQL","transaction.id":"49f2a1ec723e5a2b","trace.id":"265d4f07c9a323167a34a7cb5382bed6"}
{"@timestamp":"2020-10-05T09:47:39.928Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-10-05T09:47:39.931Z", "log.level": "INFO", "message":"Closing JPA EntityManagerFactory for persistence unit 'default'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2020-10-05T09:47:39.934Z", "log.level": "INFO", "message":"HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl"}
{"@timestamp":"2020-10-05T09:47:39.936Z", "log.level":"DEBUG", "message":"drop table car if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:39.940Z", "log.level":"DEBUG", "message":"drop table owner if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:39.941Z", "log.level":"DEBUG", "message":"drop sequence if exists hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:39.946Z", "log.level": "INFO", "message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLException: La base de données est déjà fermée (pour désactiver la fermeture automatique à larrêt de la VM, ajoutez \"; DB_CLOSE_ON_EXIT = FALSE\" à lURL db)\nDatabase is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-197]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"org.springframework.beans.factory.support.DisposableBeanAdapter"}
{"@timestamp":"2020-10-05T09:47:39.947Z", "log.level": "INFO", "message":"HikariPool-1 - Shutdown initiated...", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:47:39.952Z", "log.level": "INFO", "message":"HikariPool-1 - Shutdown completed.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-15","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:47:40.204Z", "log.level": "INFO", "message":"Starting CardatabaseApplication on synapticiel with PID 3004 (C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend\\target\\classes started by developer in C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:47:40.204Z", "log.level":"DEBUG", "message":"Running with Spring Boot v2.1.2.RELEASE, Spring v5.1.4.RELEASE", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:47:40.204Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:47:40.567Z", "log.level": "INFO", "message":"Bootstrapping Spring Data repositories in DEFAULT mode.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:47:40.581Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 14ms. Found 2 repository interfaces.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:47:40.669Z", "log.level": "INFO", "message":"Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e26cd7ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:47:40.670Z", "log.level": "INFO", "message":"Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$61ed2521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:47:40.745Z", "log.level": "INFO", "message":"Tomcat initialized with port(s): 8080 (http)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:47:40.747Z", "log.level": "INFO", "message":"Initializing ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:47:40.747Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2020-10-05T09:47:40.747Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/9.0.14]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2020-10-05T09:47:40.766Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T09:47:40.766Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 559 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.web.context.ContextLoader"}
{"@timestamp":"2020-10-05T09:47:40.835Z", "log.level": "INFO", "message":"HikariPool-2 - Starting...", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:47:40.838Z", "log.level": "INFO", "message":"HikariPool-2 - Start completed.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:47:40.846Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2020-10-05T09:47:40.854Z", "log.level": "INFO", "message":"HHH000400: Using dialect: org.hibernate.dialect.H2Dialect", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.dialect.Dialect"}
{"@timestamp":"2020-10-05T09:47:40.914Z", "log.level":"DEBUG", "message":"drop table car if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:40.914Z", "log.level":"DEBUG", "message":"drop table owner if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:40.914Z", "log.level":"DEBUG", "message":"drop sequence if exists hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:40.915Z", "log.level":"DEBUG", "message":"create sequence hibernate_sequence start with 1 increment by 1", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:40.915Z", "log.level":"DEBUG", "message":"create table car (id bigint not null, brand varchar(255), color varchar(255), market_estimate integer not null, model varchar(255), price integer not null, register_number varchar(255), year integer not null, owner bigint, primary key (id))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:40.917Z", "log.level":"DEBUG", "message":"create table owner (ownerid bigint not null, firstname varchar(255), lastname varchar(255), primary key (ownerid))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:40.918Z", "log.level":"DEBUG", "message":"alter table car add constraint FK2mqqwvxtowv4vddvtsmvtiqa2 foreign key (owner) references owner", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:40.921Z", "log.level": "INFO", "message":"HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@ad89a2a'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.tool.schema.internal.SchemaCreatorImpl"}
{"@timestamp":"2020-10-05T09:47:40.921Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2020-10-05T09:47:40.932Z", "log.level": "INFO", "message":"LiveReload server is running on port 35729", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"}
{"@timestamp":"2020-10-05T09:47:41.175Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-10-05T09:47:41.182Z", "log.level": "WARN", "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration"}
{"@timestamp":"2020-10-05T09:47:41.305Z", "log.level": "INFO", "message":"Starting ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:47:41.312Z", "log.level": "INFO", "message":"Tomcat started on port(s): 8080 (http) with context path ''", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:47:41.313Z", "log.level": "INFO", "message":"Started CardatabaseApplication in 1.142 seconds (JVM running for 455.35)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:47:41.317Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.319Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.321Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.321Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.324Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.325Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.327Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.327Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.329Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.330Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:47:41.333Z", "log.level": "INFO", "message":"Condition evaluation unchanged", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener"}
{"@timestamp":"2020-10-05T09:47:41.333Z", "log.level": "INFO", "message":"Hello Spring Boot", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:49:08.163Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-10-05T09:49:08.165Z", "log.level": "INFO", "message":"Closing JPA EntityManagerFactory for persistence unit 'default'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2020-10-05T09:49:08.166Z", "log.level": "INFO", "message":"HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl"}
{"@timestamp":"2020-10-05T09:49:08.166Z", "log.level":"DEBUG", "message":"drop table car if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:08.170Z", "log.level":"DEBUG", "message":"drop table owner if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:08.173Z", "log.level":"DEBUG", "message":"drop sequence if exists hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:08.175Z", "log.level": "INFO", "message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLException: La base de données est déjà fermée (pour désactiver la fermeture automatique à larrêt de la VM, ajoutez \"; DB_CLOSE_ON_EXIT = FALSE\" à lURL db)\nDatabase is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-197]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"org.springframework.beans.factory.support.DisposableBeanAdapter"}
{"@timestamp":"2020-10-05T09:49:08.176Z", "log.level": "INFO", "message":"HikariPool-2 - Shutdown initiated...", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:49:08.178Z", "log.level": "INFO", "message":"HikariPool-2 - Shutdown completed.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"Thread-20","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:49:08.431Z", "log.level": "INFO", "message":"Starting CardatabaseApplication on synapticiel with PID 3004 (C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend\\target\\classes started by developer in C:\\Users\\developer\\Desktop\\cloud-based\\observability\\backend)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:49:08.431Z", "log.level":"DEBUG", "message":"Running with Spring Boot v2.1.2.RELEASE, Spring v5.1.4.RELEASE", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:49:08.432Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:49:08.732Z", "log.level": "INFO", "message":"Bootstrapping Spring Data repositories in DEFAULT mode.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:49:08.743Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 11ms. Found 2 repository interfaces.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-10-05T09:49:08.809Z", "log.level": "INFO", "message":"Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e26cd7ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:49:08.810Z", "log.level": "INFO", "message":"Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$61ed2521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2020-10-05T09:49:08.889Z", "log.level": "INFO", "message":"Tomcat initialized with port(s): 8080 (http)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:49:08.890Z", "log.level": "INFO", "message":"Initializing ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:49:08.891Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2020-10-05T09:49:08.891Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/9.0.14]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2020-10-05T09:49:08.916Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]"}
{"@timestamp":"2020-10-05T09:49:08.916Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 482 ms", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.web.context.ContextLoader"}
{"@timestamp":"2020-10-05T09:49:08.980Z", "log.level": "INFO", "message":"HikariPool-3 - Starting...", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:49:08.983Z", "log.level": "INFO", "message":"HikariPool-3 - Start completed.", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2020-10-05T09:49:08.989Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [\n\tname: default\n\t...]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2020-10-05T09:49:08.997Z", "log.level": "INFO", "message":"HHH000400: Using dialect: org.hibernate.dialect.H2Dialect", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.dialect.Dialect"}
{"@timestamp":"2020-10-05T09:49:09.060Z", "log.level":"DEBUG", "message":"drop table car if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.060Z", "log.level":"DEBUG", "message":"drop table owner if exists", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.060Z", "log.level":"DEBUG", "message":"drop sequence if exists hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.061Z", "log.level":"DEBUG", "message":"create sequence hibernate_sequence start with 1 increment by 1", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.061Z", "log.level":"DEBUG", "message":"create table car (id bigint not null, brand varchar(255), color varchar(255), market_estimate integer not null, model varchar(255), price integer not null, register_number varchar(255), year integer not null, owner bigint, primary key (id))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.062Z", "log.level":"DEBUG", "message":"create table owner (ownerid bigint not null, firstname varchar(255), lastname varchar(255), primary key (ownerid))", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.062Z", "log.level":"DEBUG", "message":"alter table car add constraint FK2mqqwvxtowv4vddvtsmvtiqa2 foreign key (owner) references owner", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.065Z", "log.level": "INFO", "message":"HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@ad89a2a'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.tool.schema.internal.SchemaCreatorImpl"}
{"@timestamp":"2020-10-05T09:49:09.065Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2020-10-05T09:49:09.074Z", "log.level": "INFO", "message":"LiveReload server is running on port 35729", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"}
{"@timestamp":"2020-10-05T09:49:09.299Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-10-05T09:49:09.304Z", "log.level": "WARN", "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration"}
{"@timestamp":"2020-10-05T09:49:09.401Z", "log.level": "INFO", "message":"Starting ProtocolHandler [\"http-nio-8080\"]", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2020-10-05T09:49:09.406Z", "log.level": "INFO", "message":"Tomcat started on port(s): 8080 (http) with context path ''", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2020-10-05T09:49:09.407Z", "log.level": "INFO", "message":"Started CardatabaseApplication in 1.009 seconds (JVM running for 543.441)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
{"@timestamp":"2020-10-05T09:49:09.411Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.413Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.415Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.416Z", "log.level":"DEBUG", "message":"insert into owner (firstname, lastname, ownerid) values (?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.419Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.420Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.421Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.422Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.424Z", "log.level":"DEBUG", "message":"call next value for hibernate_sequence", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.425Z", "log.level":"DEBUG", "message":"insert into car (brand, color, market_estimate, model, owner, price, register_number, year, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.hibernate.SQL"}
{"@timestamp":"2020-10-05T09:49:09.427Z", "log.level": "INFO", "message":"Condition evaluation unchanged", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener"}
{"@timestamp":"2020-10-05T09:49:09.427Z", "log.level": "INFO", "message":"Hello Spring Boot", "service.name":"car-front-end","event.dataset":"car-front-end.log","process.thread.name":"restartedMain","log.logger":"com.packt.cardatabase.CardatabaseApplication"}
